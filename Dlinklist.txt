#include<stdio.h>
#include<string.h>
struct student
{
	int rollno;
	char name[10];
	int marks;
	char mobileno[10];
};
struct node
{
	struct node* prev;
	struct student* data;
	struct node* next;
};
int createNode()
{
	struct node* newnode = NULL;
	newnode = (struct node*)malloc(sizeof(struct node));
	if (newnode == NULL)
	{
		printf("Memory not assign\n");
	}
	else
	{
		newnode->data = (struct student*)malloc(sizeof(struct student));
		if (newnode->data == NULL)
		{
			printf("memory is not assign\n");
		}
		else
		{
			//char buffer[10];
			printf("Enter rollno\n");
			scanf("%d", &newnode->data->rollno);
			printf("Enter name\n");
			getchar();
			//fgets(newnode->data->name, sizeof(newnode->data->name), stdin);
			scanf("%s", newnode->data->name);
			//gets(buffer);
			//strcpy(newnode->data->name, buffer);
			//newnode->data->mobileno="rahul";
			printf("Enter marks\n");
			scanf("%d", &newnode->data->marks);
			getchar();
			printf("Enter mobileNumber\n");
			//fgets(newnode->data->mobileno, sizeof(newnode->data->mobileno), stdin);
			scanf("%s", newnode->data->mobileno);
		}

		newnode->prev = NULL;
		newnode->next = NULL;

	}

}
void createLinkList(struct node** head1, struct node** head2)
{
	struct node* tempnode = NULL;
	tempnode = createNode();
	if (*head1 == NULL)
	{
		*head1 = tempnode;
		*head2 = tempnode;
	}
	else
	{
		tempnode->prev = *head2;
		(*head2)->next = tempnode;
		*head2 = tempnode;

	}
}
void sortStudentByMarks(struct node* head)
{
	struct node* trav1 = head;
	struct node* trav2 = head;
	while (trav1 != NULL)
	{
		trav2 = trav1->next;
		while (trav2 != NULL)
		{
			if (trav1->data->marks > trav2->data->marks)
			{
				int temp;
				char buffer[20];
				temp = trav1->data->marks;
				trav1->data->marks = trav2->data->marks;
				trav2->data->marks = temp;

				strcpy(buffer,trav1->data->name);
				strcpy(trav1->data->name,trav2->data->name);
				strcpy(trav2->data->name, buffer);

				temp = trav1->data->rollno;
				trav1->data->rollno = trav2->data->rollno;
				trav2->data->rollno = temp;

				strcpy(buffer, trav1->data->mobileno);
				strcpy(trav1->data->mobileno, trav2->data->mobileno);
				strcpy(trav2->data->mobileno, buffer);	
			}
			trav2 = trav2->next;
		}
		trav1 = trav1->next;
	}
}
void display(struct node* head)
{
	if (head == NULL)
	{
		printf("linklist is Empty\n");
	}
	else
	{
		while (head != NULL)
		{
			printf("%d,%d,%s,%s=>", head->data->rollno, head->data->marks, head->data->name, head->data->mobileno);
			
			head = head->next;
		}

	}
}
void main()
{
	int choice;
	struct node* first = NULL;
	struct node* last = NULL;
	printf("Enter 1 for Enter student information\n");
	printf("Enter 2 for sortStudentByMarks\n");
	printf("Enter 3 for dispaly\n");
	printf("Enter 0 for exit\n");
	do
	{
		printf("Enter choice\n");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:createLinkList(&first, &last);
			break;
		case 2:sortStudentByMarks(first);
			break;
		case 3:display(first);
			break;
		case 0:exit(0);
			break;
		default:printf("Enter valid position\n");
			break;

		}
	} while (choice != 0);
}
